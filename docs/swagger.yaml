definitions:
  requests.AuthorizationRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  requests.RoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  requests.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  requests.UserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  requests.UserSendOTPRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  requests.UserVerifOTPRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  responses.RoleResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: login success
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/auth/regis:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: registration user success
          schema:
            additionalProperties: true
            type: object
      summary: User registration
      tags:
      - auth
  /api/v1/auth/send-otp:
    post:
      consumes:
      - application/json
      description: Send an OTP to user's email
      parameters:
      - description: Send OTP
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/requests.UserSendOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: otp code has been send
          schema:
            additionalProperties: true
            type: object
      summary: Send OTP
      tags:
      - auth
  /api/v1/auth/verif-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP for a user
      parameters:
      - description: Verify OTP
        in: body
        name: otp
        required: true
        schema:
          $ref: '#/definitions/requests.UserVerifOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: otp verification success
          schema:
            additionalProperties: true
            type: object
      summary: Verify OTP
      tags:
      - auth
  /api/v1/authorizations:
    get:
      consumes:
      - application/json
      description: Get all authorization
      produces:
      - application/json
      responses:
        "200":
          description: get all authorization success
          schema:
            additionalProperties: true
            type: object
      summary: Get all authorization
      tags:
      - authorization
    post:
      consumes:
      - application/json
      description: Create new authorization
      parameters:
      - description: Create new authorization
        in: body
        name: authorization
        required: true
        schema:
          $ref: '#/definitions/requests.AuthorizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: create new authorization success
          schema:
            additionalProperties: true
            type: object
      summary: Create new authorization
      tags:
      - authorization
  /api/v1/authorizations/{id}:
    delete:
      consumes:
      - application/json
      description: Update authorization by id
      parameters:
      - description: authorization id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: update authorization by id success
          schema:
            additionalProperties: true
            type: object
      summary: Update authorization by id
      tags:
      - authorization
    get:
      consumes:
      - application/json
      description: Get authorization by id
      parameters:
      - description: authorization id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: get authorization by id success
          schema:
            additionalProperties: true
            type: object
      summary: Get authorization by id
      tags:
      - authorization
  /api/v1/roles:
    post:
      consumes:
      - application/json
      description: Create new role
      parameters:
      - description: Create new role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/requests.RoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.RoleResponse'
      summary: Create new role
      tags:
      - role
  /api/v1/roles/{id}:
    get:
      consumes:
      - application/json
      description: Get role by id
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.RoleResponse'
      summary: Get role by id
      tags:
      - role
  /api/v1/users/me:
    get:
      consumes:
      - application/json
      description: Get data of authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: user data fetched successfully
          schema:
            additionalProperties: true
            type: object
      summary: Get User Data
      tags:
      - users
  /example/helloworld:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
      tags:
      - example
swagger: "2.0"
